server:
  port: ${SERVER_PORT:8080}
  forward-headers-strategy: framework
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: ${APPLICATION_NAME:gateway}
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: file-manager-route
          uri: lb://file-manager
          predicates:
            - Path=/file-manager/**
          filters:
            - StripPrefix=1
        - id: quiz-session-route
          uri:  lb://quiz-session
          predicates:
            - Path=/quiz-session/**

        - id: quiz-database-route
          uri: lb://quiz-database
          predicates:
            - Path=/quiz-database/**
          filters:
            - StripPrefix=1

        - id: ai-quiz-route
          uri: lb://ai-quiz
          predicates:
            - Path=/ai-quiz/**
          filters:
            - StripPrefix=1

        - id: frontend-route
          uri: lb://frontend
          predicates:
            - Path=/**

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-name: Google
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile
          discord:
            client-id: ${DISCORD_CLIENT_ID:1339887403883692094}
            client-secret: ${DISCORD_CLIENT_SECRET:GQ7njUQTmqFW20wc3aBl7jwfvMO1Ks1o}
            client-name: Discord
            provider: discord
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: identify, email
        provider:
          discord:
            authorization-uri: https://discord.com/api/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
  instance:
    hostname: localhost
    preferIpAddress: true

custom:
  redirect-base-url: /loginCallback